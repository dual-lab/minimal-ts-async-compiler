version: 2.1
description: Node js building testing and publishing module

var_1: &docker_image circleci/node:11.10.1
var_2: &cache_key cc-v1-node-11101-{{ checksum "yarn.lock" }}

executors:
  node-yarn:
    docker:
      - image: *docker_image
    working_directory: ~/tsst

commands:
  restore-node-dep:
    description: "Restore node dependencies from cache"
    steps:
      - restore_cache: 
          key: *cache_key
  
  attach-workspace:
    description: "Attach current workspace to subsequence workflows"
    steps:
      - attach_workspace:
          at: ~/

  yarn-install:
    description: "Install dependencies from yarn.lock"
    steps:
      - run: 
          name: "Yarn Install"
          command: yarn install --frozen-lockfile --non-interactive
  
jobs:
  setup:
    executor: node-yarn
    steps:
      - checkout
      - restore-node-dep
      - yarn-install
      - save_cache:
          name: "Save Yarn Package Cache"
          key: *cache_key
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/
          paths:
            - ./tsst


  lint:
    executor: node-yarn
    steps:
      - attach-workspace
      - run: yarn run lint

  test:
    executor: node-yarn
    steps:
      - attach-workspace
      - run: yarn run test

  pre-publish:
    executor: node-yarn
    steps:
      - attach-workspace
      - run: yarn run pre-publish
      - persist_to_workspace:
          root: ~/
          paths:
            - ./tsst/dist
  
  publish-module:
    executor: node-yarn
    steps:
      - attach-workspace
      - run:
          name: 'Descrypt github token'
          command: echo 'export GITHUB_TOKEN=$(openssl aes-256-cbc -d -in .circleci/github_token -k ${KEY} -iv ${IV_NONCE})' >> $BASH_ENV
      - run:
          name: 'Descrypt npm token'
          command: echo 'export NPM_TOKEN=$(openssl aes-256-cbc -d -in .circleci/npm_token -k ${KEY} -iv ${IV_NONCE})' >> $BASH_ENV
      - run:
          name: 'Configure npmrc'
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/tsst/.npmrc
      - run: 
          name: 'Publish artifact'
          command: ./scripts/circleci/publish-artifact.sh

workflows:
  version: 2
  default_workflow:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
      - pre-publish:
          requires:
            - lint
            - test
      - publish-module:
          requires:
            - pre-publish
          filters:
            branches:
              only: master

  
